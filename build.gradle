import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.1.0'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'org.graalvm.buildtools.native' version '0.9.18'
	id 'org.jetbrains.kotlin.jvm' version '1.7.22'
	id 'jacoco'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.7.22'
}

ext {
	jsonWebTokenVersion = "0.11.5"
	jacocoVersion = "0.8.8"
	mockkVersion = "1.13.5"
	kotlinLoggingJvmVersion = "3.0.5"
	logbackVersion = "1.4.8"
}

group = 'com.distasilucas'
version = '1.0.0-SNAPSHOT'
sourceCompatibility = '17'

bootJar {
	archiveFileName = "${project.name}.jar"
	launchScript()
}

repositories {
	mavenCentral()
}

jacoco {
	toolVersion = jacocoVersion
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"com/distasilucas/cryptobalancetrackerlogin/config/**",
					"com/distasilucas/cryptobalancetrackerlogin/model/**",
					"com/distasilucas/cryptobalancetrackerlogin/entity/**",
					"com/distasilucas/cryptobalancetrackerlogin/CryptoBalanceTrackerLoginApplication.*",
					"com/distasilucas/cryptobalancetrackerlogin/CryptoBalanceTrackerLoginApplicationKt.*",
			])
		}))
	}

	reports {
		csv.enabled true
		html.enabled true
	}

	classDirectories.setFrom(files("${project.buildDir}/classes/kotlin/main"))
	sourceDirectories.setFrom(files("${project.projectDir}/src/main/kotlin"))
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.jetbrains.kotlin:kotlin-reflect"
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	implementation "io.jsonwebtoken:jjwt-api:${jsonWebTokenVersion}"
	implementation "io.github.microutils:kotlin-logging-jvm:${kotlinLoggingJvmVersion}"
	implementation "ch.qos.logback:logback-core:${logbackVersion}"

	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jsonWebTokenVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jsonWebTokenVersion}"

	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.security:spring-security-test"
	testImplementation "io.mockk:mockk:${mockkVersion}"
}

tasks.withType(KotlinCompile) {
	kotlinOptions {
		freeCompilerArgs = ['-Xjsr305=strict']
		jvmTarget = '17'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
