import org.jetbrains.kotlin.gradle.dsl.JvmTarget
import org.jetbrains.kotlin.gradle.tasks.KotlinCompile

plugins {
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'org.graalvm.buildtools.native' version '0.9.28'
	id 'org.jetbrains.kotlin.jvm' version '1.9.21'
	id 'jacoco'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.21'
}

ext {
	jsonWebTokenVersion = "0.12.6"
	jacocoVersion = "0.8.12"
	mockkVersion = "1.13.11"
	logbackVersion = "1.5.6"
	ioGithubOshai = "7.0.0"
}

group = 'com.distasilucas'
version = '1.0.0-SNAPSHOT'

java {
	sourceCompatibility = '21'
}

bootJar {
	archiveFileName = "${project.name}.jar"
	launchScript()
}

repositories {
	mavenCentral()
}

jacoco {
	toolVersion = jacocoVersion
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"**/configuration/**",
					"**/CryptoBalanceTrackerLoginApplication**",
					"**/*\$logger\$*.class"
			])
		}))
	}

	reports {
		csv.required.set(true)
		html.required.set(true)
		xml.required.set(true)
	}

	classDirectories.setFrom(files("${project.buildDir}/classes/kotlin/main"))
	sourceDirectories.setFrom(files("${project.projectDir}/src/main/kotlin"))
}

dependencies {
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
	implementation "org.springframework.boot:spring-boot-starter-security"
	implementation "org.springframework.boot:spring-boot-starter-validation"
	implementation "org.jetbrains.kotlin:kotlin-reflect"
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
	implementation "io.jsonwebtoken:jjwt-api:${jsonWebTokenVersion}"
	implementation "ch.qos.logback:logback-core:${logbackVersion}"
	implementation "io.github.oshai:kotlin-logging-jvm:${ioGithubOshai}"

	runtimeOnly "io.jsonwebtoken:jjwt-impl:${jsonWebTokenVersion}"
	runtimeOnly "io.jsonwebtoken:jjwt-jackson:${jsonWebTokenVersion}"

	testImplementation "org.springframework.boot:spring-boot-starter-test"
	testImplementation "org.springframework.security:spring-security-test"
	testImplementation "io.mockk:mockk:${mockkVersion}"
}

tasks.withType(KotlinCompile).configureEach {
	compilerOptions {
		freeCompilerArgs.add("-Xjsr305=strict")
		jvmTarget.set(JvmTarget.JVM_21)
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
